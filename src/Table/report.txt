import React, { useEffect, useState } from "react";
import { jsPDF } from "jspdf";
import "jspdf-autotable";
import { ref, onValue } from "firebase/database";
import { database } from "../firebase";
import logo from "../image/BCS_LOGO_ALT_OG.png";

declare module "jspdf" {
  interface jsPDF {
    autoTable: any;
  }
}

const ReportData = () => {
  const [data, setData] = useState<any[]>([]);

  const columns: string[] = [
    "Name",
    "Office/Agency",
    "Day 1",
    "Day 2",
    "Day 3",
    "Day 4",
    "No. of Days Present",
  ];

  useEffect(() => {
    const dbRef = ref(database, "users");
    onValue(dbRef, (snapshot: any) => {
      const firebaseData = snapshot.val();
      if (firebaseData) {
        const formattedData = Object.entries(firebaseData).map(
          ([key, value]) => ({
            id: key,
            ...(value as Record<string, any>),
          })
        );
        setData(formattedData);
      } else {
        setData([]);
      }
    });
  }, []);

  const exportToPDF = () => {
    const doc = new jsPDF();

    // doc.text("System Generated Report", 10, 10);

    const img = logo;
    const imageWidth = 45;
    const imageHeight = 23;

    const currentDate = new Date();
    const formattedDate = `${currentDate.getDate()}/${
      currentDate.getMonth() + 1
    }/${currentDate.getFullYear()}`;

    doc.addImage(img, "PNG", 10, 10, imageWidth, imageHeight);

    doc.setFontSize(9);
    doc.text(
      "2/F Left Wing, ES Plaza, Lopez Ave. Los BaÃ±os, Laguna Philippines",
      101,
      15
    );
    doc.text("inquiries@blinkcreativestudio.com", 149, 20);
    doc.text("0949 993 7469 / 0915 377 1777", 152, 26);
    doc.text("www.blinkcreativestudio.com", 156, 31);

    doc.text("Activity / Event: 36th Ugnay Palay Attendees", 12, 40);
    doc.text("Date: December 3-5, 2024", 12, 44);
    doc.text("Venue: DA-PhilRice CES", 12, 48);
    doc.text(`Generated on: ${formattedDate}`, 12, 291);

    const rows = data.map((item) => {
      const attendedDays = [
        item.day1timeAttended,
        item.day2timeAttended,
        item.day3timeAttended,
        item.day4timeAttended,
      ].filter(Boolean).length;

      return [
        item.fullName,
        item.philriceStation || item.affiliationName || "N/A",
        item.day1timeAttended || "N/A",
        item.day2timeAttended || "N/A",
        item.day3timeAttended || "N/A",
        item.day4timeAttended || "N/A",
        attendedDays.toString(),
      ];
    });

    doc.autoTable({
      head: [columns],
      body: rows,
      startY: 54,
      styles: {
        font: "helvetica",
        fontSize: 10,
        textColor: [0, 0, 0],
        lineColor: [200, 200, 200],
        lineWidth: 0.5,
        fillColor: [255, 255, 255],
        cellPadding: 3,
      },
      headStyles: {
        fontSize: 12,
        fillColor: [240, 240, 240],
        textColor: [0, 0, 0],
        fontStyle: "bold",
      },
      bodyStyles: {
        fillColor: [255, 255, 255],
        textColor: [50, 50, 50],
      },
      alternateRowStyles: {
        fillColor: [245, 245, 245],
      },
      theme: "striped",
    });

    doc.save("report.pdf");
  };

  return (
    <div className="container mx-auto p-4">
      <div className="flex justify-between my-4 gap-4">
        <h1 className="text-3xl font-semibold">System Generated Report</h1>
        <button
          onClick={exportToPDF}
          className="px-6 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600">
          Export to PDF
        </button>
      </div>

      {data.length > 0 ? (
        <>
          <table className="min-w-full table-auto border-collapse border border-gray-200">
            <thead>
              <tr>
                {columns.map((col) => (
                  <th
                    key={col}
                    className="px-4 py-2 text-left border-b font-medium">
                    {col}
                  </th>
                ))}
              </tr>
            </thead>
            <tbody>
              {data.map((item) => {
                const attendedDays = [
                  item.day1timeAttended,
                  item.day2timeAttended,
                  item.day3timeAttended,
                  item.day4timeAttended,
                ].filter(Boolean).length;

                return (
                  <tr key={item.id} className="hover:bg-gray-100">
                    <td className="px-4 py-2 border-b">
                      {item.fullName || "N/A"}
                    </td>
                    <td className="px-4 py-2 border-b">
                      {item.philriceStation || item.affiliationName || "N/A"}
                    </td>
                    <td className="px-4 py-2 border-b">
                      {item.day1timeAttended || "N/A"}
                    </td>
                    <td className="px-4 py-2 border-b">
                      {item.day2timeAttended || "N/A"}
                    </td>
                    <td className="px-4 py-2 border-b">
                      {item.day3timeAttended || "N/A"}
                    </td>
                    <td className="px-4 py-2 border-b">
                      {item.day4timeAttended || "N/A"}
                    </td>
                    <td className="px-4 py-2 border-b">{attendedDays}</td>
                  </tr>
                );
              })}
            </tbody>
          </table>

          {/* <button
            onClick={exportToPDF}
            className="mt-4 px-6 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600">
            Export to PDF
          </button> */}
        </>
      ) : (
        <p className="mt-4 text-gray-500">No data available</p>
      )}
    </div>
  );
};

export default ReportData;
